(()=>{"use strict";var t=function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{a(o.next(t))}catch(t){r(t)}}function c(t){try{a(o.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,c)}a((o=o.apply(t,e||[])).next())}))};class e{static getLastUpdate(){return t(this,void 0,void 0,(function*(){return this.getContent("lastUpdate.txt")}))}static getTrans(){return t(this,void 0,void 0,(function*(){return this.getContent("trans.json")}))}static getRule(){return t(this,void 0,void 0,(function*(){return this.getContent("rule.json")}))}static getContent(e){return t(this,void 0,void 0,(function*(){this.timeLogger.start(e);const t=this.getURL(e),n=yield fetch(t,{cache:"no-cache"});if(!n.ok)return console.error(`${e} がサーバから取得できませんでした。`),null;const o=yield n.text();return this.timeLogger.end(e,{size:o.length.toLocaleString()}),o}))}static getURL(t){return new URL(t,this.baseURL).href}}e.baseURL="https://vrcalphabet.github.io/vrc-transition/",e.timeLogger=new class{constructor(t){this.template=void 0!==t?t:"[$<name>] Took $<time> ms",this.timer=new Map}start(t){this.timer.set(t,performance.now())}end(t,e){if(!this.timer.has(t))return!1;const n=performance.now(),o=this.timer.get(t);return void 0===e&&(e={}),Object.assign(e,{name:t,time:Math.floor(n-o)}),console.log(this.setPlaceholder(e)),this.timer.delete(t),!0}setPlaceholder(t){let e=this.template;for(const n in t)e=e.replaceAll(`$<${n}>`,t[n].toString());return e}}('"$<name>"をサーバから$<time>ミリ秒かけて取得しました。データサイズ: $<size>バイト');const n=e;var o=function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{a(o.next(t))}catch(t){r(t)}}function c(t){try{a(o.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,c)}a((o=o.apply(t,e||[])).next())}))};class i{static set(t,e){return o(this,void 0,void 0,(function*(){chrome.storage.local.set({[t]:e})}))}static get(t,e){return o(this,void 0,void 0,(function*(){const n=yield new Promise((e=>{chrome.storage.local.get(t,(n=>{e(n[t])}))}));return void 0===n?e:n}))}static remove(t){return o(this,void 0,void 0,(function*(){chrome.storage.local.remove(t)}))}}var r=function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{a(o.next(t))}catch(t){r(t)}}function c(t){try{a(o.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,c)}a((o=o.apply(t,e||[])).next())}))};class s{static checkUpdate(){return r(this,void 0,void 0,(function*(){(yield this.needsUpdate())?this.update()||console.log("データの更新に失敗しました: サーバがダウンしているか、サーバにファイルが存在していない可能性があります。"):console.log("データは最新の状態です。")}))}static needsUpdate(){return r(this,void 0,void 0,(function*(){const t=yield i.get("lastUpdate");if(void 0===t)return!0;const e=yield n.getLastUpdate();return null!==e&&+t<+e}))}static update(){return r(this,void 0,void 0,(function*(){const t=yield n.getLastUpdate();if(null===t)return!1;const e=yield n.getRule();if(null===e)return!1;const o=yield n.getTrans();return null!==o&&(i.set("lastUpdate",t),i.set("rule",e),i.set("trans",o),console.log("データを更新しました。"),!0)}))}}function c(){console.log("拡張機能がアクティベートされました。"),setInterval(a,18e5),a()}function a(){console.log("更新データを確認中..."),s.checkUpdate()}chrome.runtime.onInstalled.addListener(c),chrome.runtime.onStartup.addListener(c)})();